
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package com.entertainment.musicpage.dao.dao.impl;
 
 
 import com.entertainment.musicpage.dao.dao.AlbumsongDAO;
 
 
 
 import java.io.Serializable;
 import com.entertainment.musicpage.dao.customdaosupport.CustomDAOSupport;
 import org.hibernate.Query;
 import java.util.List;
 import com.entertainment.musicpage.dao.models.Albumsong;
 import java.lang.Integer;
 
 
 /***************************************************
 *DAO class of albumsong table.
 *Generated on Sat Jun 01 01:50:25 ICT 2013
 ***************************************************/
 
 
 public class AlbumsongDAOImpl extends CustomDAOSupport implements Serializable, AlbumsongDAO {
 
 /**
 * @return Albumsong
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public List<Albumsong> findAll(){

		Query query = getDAOManager().createQuery(" select t from Albumsong t");

		List<Albumsong> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Albumsong
 * @param: Albumsong
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public void save(Albumsong arg0){

		getDAOManager().persist(arg0);

	}
 
 /**
 * Updates Albumsong
 * @param: Albumsong
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public void update(Albumsong arg0){

		getDAOManager().merge(arg0);

	}
 
 /**
 * Removes Albumsong
 * @param: Albumsong
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public void delete(Albumsong arg0){

		getDAOManager().delete(arg0);

	}
 
 /**
 * @return Albumsong
 * @param: java.lang.Integer Idalbum
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public List<Albumsong> getAlbumsongByIdalbum(Integer idalbum){

		Query query = getDAOManager().createQuery(" select t from Albumsong t where t.idalbum = ?1 ");

		query.setParameter(1, idalbum);


		List<Albumsong> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Albumsong
 * @param: java.lang.Integer idalbum
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public List<Albumsong> getAlbumsongByIdalbum(Integer idalbum, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Albumsong t where t.idalbum = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idalbum);


		List<Albumsong> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Albumsong
 * @param: java.lang.Integer Idsong
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public List<Albumsong> getAlbumsongByIdsong(Integer idsong){

		Query query = getDAOManager().createQuery(" select t from Albumsong t where t.idsong = ?1 ");

		query.setParameter(1, idsong);


		List<Albumsong> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Albumsong
 * @param: java.lang.Integer idsong
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Sat Jun 01 01:50:25 ICT 2013
 * @See Albumsong
 */
	public List<Albumsong> getAlbumsongByIdsong(Integer idsong, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Albumsong t where t.idsong = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idsong);


		List<Albumsong> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 
 
 
 }